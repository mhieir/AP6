{"date":"2024-05-31T05:30:00.053Z","courseId":"17","assignment":"AP-Spring03-CA6","trace":{"content":"#include \"Global.hpp\"\n\nvector<string> read_csv(const char path[256])\n{\n    vector<string> lines;\n    ifstream file_name;\n    string new_line;\n    file_name.open(path);\n    while (getline(file_name, new_line))\n    {\n        lines.push_back(new_line);\n    }\n    file_name.close();\n    return lines;\n}\n\nvoid signInSplitting(string &result, vector<string> &splitted)\n{\n    splitted.push_back(result);\n    result = NULL_STRING;\n}\n\nvoid notSignInSplitting(string &result, char character)\n{\n    result += character;\n}\n\nbool hasQuotion(string inputString)\n{\n    if (inputString[5] == 'p' and inputString[6] == 'o' and inputString[7] == 's' and inputString[8] == 't') {\n        return true;\n    }\n    return false;\n}\n\nvoid handleQoution(int &i, string &result, vector<string> &splitted, string inputString, int &check)\n{\n    for (i; i < inputString.size(); i++)\n    {\n        notSignInSplitting(result, inputString[i]);\n        if (inputString[i] == QUOTION)\n        {\n            check++;\n            if ((int)result.size() != 1)\n            {\n                signInSplitting(result, splitted);\n                break;\n            }\n        }\n    }\n}\n\nvector<string> splitInQuotionMode(string inputString)\n{\n    int check = ZERO;\n    string result = NULL_STRING;\n    vector<string> splitted;\n    for (int i = 0; i < inputString.size(); i++)\n    {\n        if (inputString[i] == SPACE)\n        {\n            if (result != NULL_STRING)\n                signInSplitting(result, splitted);\n        }\n        else if (inputString[i] != QUOTION)\n        {\n            notSignInSplitting(result, inputString[i]);\n        }\n        else\n        {\n            if (result != NULL_STRING)\n            {\n                splitted.clear();\n                return splitted;\n            }\n            handleQoution(i, result, splitted, inputString, check);\n        }\n    }\n\n    if (check != 4)\n        splitted.clear();\n    if (result != NULL_STRING)\n        signInSplitting(result, splitted);\n    return splitted;\n}\n\nvector<string> splitByInputSign(string inputString, char sign)\n{\n    if (hasQuotion(inputString))\n    {\n        return splitInQuotionMode(inputString);\n    }\n    string result = NULL_STRING;\n    vector<string> splitted;\n    for (auto &character : inputString)\n    {\n        if (character == sign)\n        {\n            if (result != NULL_STRING)\n                signInSplitting(result, splitted);\n        }\n        else\n        {\n            notSignInSplitting(result, character);\n        }\n    }\n    if (result != NULL_STRING)\n        signInSplitting(result, splitted);\n    return splitted;\n}\n\nbool isQuestionMark(string input_line)\n{\n    if (input_line == QUESTION_MARK)\n    {\n        return true;\n    }\n    else\n    {\n        return false;\n    }\n}\n\nbool isNumber(string post_id)\n{\n    for (char c : post_id)\n    {\n        if (!isdigit(c))\n        {\n            return false;\n        }\n    }\n    return true;\n}\n\nstring makeText(vector<string> input_line, int start, int end)\n{\n    string result = NULL_STRING;\n    for (int i = start; i < end; i++)\n    {\n        result += input_line[i] + SPACE;\n    }\n    result += input_line[end];\n    return result;\n}\n\nvector<int> findQuotion(vector<string> input_line)\n{\n    vector<int> quotion;\n    for (int i = 3; i < input_line.size(); i++)\n    {\n        if (input_line[i][0] == QUOTION)\n        {\n            quotion.push_back(i);\n        }\n        if (input_line[i].back() == QUOTION and (int) input_line[i].size() != 1)\n        {\n            quotion.push_back(i);\n        }\n    }\n    return quotion;\n}\n\nbool hasCommon(int a, int b, int c, int d)\n{\n    if (max(a, c) < min(b, d))\n    {\n        return true;\n    }\n    else\n    {\n        return false;\n    }\n}","filename":"/Users/mahdis/Desktop/AP/AP6/src/Primary.cpp","identifier":"Save Document","languageId":"cpp","version":220,"lineCount":174},"failed":false}