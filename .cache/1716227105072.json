{"date":"2024-05-20T16:44:52.526Z","courseId":"17","assignment":"AP-Spring03-CA6","trace":{"version":241,"content":"#include \"Global.hpp\"\n\nvector<string> read_csv(const char path[256]) {\n    vector<string> lines;\n    ifstream file_name;\n    string new_line;\n    file_name.open(path);\n    while (getline(file_name, new_line)) {\n        lines.push_back(new_line);\n    }\n    file_name.close();\n    return lines;\n}\n\nvoid signInSplitting(string &result, vector<string> &splitted)\n{\n    splitted.push_back(result);\n    result = NULL_STRING;\n}\n\nvoid notSignInSplitting(string &result, char character)\n{\n    result += character;\n}\n\nvector<string> splitByInputSign(string inputString, char sign)\n{\n    string result = NULL_STRING;\n    vector<string> splitted;\n    for (auto &character : inputString){\n        if (character == sign) {\n            signInSplitting(result, splitted);\n        }\n        else {\n            notSignInSplitting(result, character);\n        }\n    }\n    signInSplitting(result, splitted);\n    return splitted;\n}\n\nvoid catchError(runtime_error& ex) {\n    cerr << ex.what() << endl;\n    string to_be_ignored;\n    getline(cin, to_be_ignored);\n}\n\nvoid checkQuestionMark() {\n\ttry {\n        string new_input;\n        cin >> new_input;\n        if(new_input != QUESTION_MARK) {\n            throw runtime_error(BAD_REQUEST);\n        }\n    } catch(runtime_error& ex) {\n        catchError(ex);\n    }\n}\n\nvoid okMode() {\n\ttry {\n        throw runtime_error(OK);\n        \n    } catch(runtime_error& ex) {\n        catchError(ex);\n    }\n}","filename":"/Users/mahdis/Desktop/AP/AP6/src/Primary.cpp","identifier":"Text Change","lineCount":67,"languageId":"cpp"},"failed":true}