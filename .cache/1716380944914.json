{"date":"2024-05-22T12:29:03.688Z","courseId":"17","assignment":"AP-Spring03-CA6","trace":{"version":62,"content":"#include \"University.hpp\"\n#include \"Primary.hpp\"\n\nbool University::wasConnected(string id) {\n    if(user->inConnection(id)) {\n        return true;\n    }\n    return false;\n}\n\nvoid University::checkConnectionValidInput() {\n    try {\n        if(input_line[3] != ID) {\n            throw runtime_error(BAD_REQUEST);\n        }\n        else if(isFloatId(input_line[4])) {\n            throw runtime_error(BAD_REQUEST);\n        }\n        else if(!checkValidId(input_line[4])) {\n            throw runtime_error(NOT_FOUND);\n        }\n        else if(wasConnected(input_line[4])) {\n            throw runtime_error(BAD_REQUEST);\n        }\n        else {\n            throw runtime_error(OK);\n            user->addConnection(input_line[4]);\n        }\n    } catch(runtime_error& ex) {\n        catchError(ex);\n    }\n}\n\nvoid University::checkQuestionMarkConnect() {\n    try {\n        if(input_line[2] == QUESTION_MARK) {\n            checkConnectionValidInput();\n        }\n        else {\n            \n        }\n    } catch(runtime_error& ex) {\n        catchError(ex);\n    }\n}\n\nvoid University::checkLoginConnect() {\n    try {\n        \n        else {\n            \n        }\n    } catch(runtime_error& ex) {\n        catchError(ex);\n    }\n}\n\nvoid University::runConnect() {\n    if(input_line.size() != CONNECT_MODE_SIZE) {\n        throw runtime_error(BAD_REQUEST);\n    }\n    else if(!checkLogin()) {\n        throw runtime_error(PERMISSION_DENIED);\n    }\n    else if(!isQuestionMark(input_line[2])) {\n        throw runtime_error(BAD_REQUEST);\n    }\n    else if()\n}","filename":"/Users/mahdis/Desktop/AP/AP6/src/Connect.cpp","identifier":"Text Change","lineCount":69,"languageId":"cpp"},"failed":false}