{"date":"2024-06-09T08:37:16.461Z","courseId":"17","assignment":"AP-Spring03-CA6-phase3","trace":{"content":"#include <iostream>\n#include <string>\n\n#include \"../server/server.hpp\"\n#include \"handlers.hpp\"\n\nvoid mapServerPaths(Server& server) {\n    server.setNotFoundErrPage(\"static/404.html\");\n    server.get(\"/\", new ShowPage(\"static/home.html\"));\n    server.get(\"/home.png\", new ShowImage(\"static/home.png\"));\n    server.get(\"/rand\", new RandomNumberHandler());\n    server.get(\"/login\", new ShowPage(\"static/logincss.html\"));\n    server.post(\"/login\", new LoginHandler());\n    server.get(\"/up\", new ShowPage(\"static/upload_form.html\"));\n    server.post(\"/up\", new UploadHandler());\n    server.get(\"/colors\", new ColorHandler(\"template/colors.html\"));\n    server.get(\"/music\", new ShowPage(\"static/music.html\"));\n    server.get(\"/music/moonlight.mp3\", new ShowFile(\"static/moonlight.mp3\", \"audio/mpeg\"));\n}\n\nint main(int argc, char** argv) {\n    try {\n        int port = argc > 1 ? std::stoi(argv[1]) : 8080;\n        Server server(port);\n        mapServerPaths(server);\n        std::cout << \"Server running on port: \" << port << std::endl;\n        server.run();\n    }\n    catch (const std::invalid_argument& e) {\n        std::cerr << e.what() << std::endl;\n    }\n    catch (const Server::Exception& e) {\n        std::cerr << e.getMessage() << std::endl;\n    }\n    return 0;\n}\n","filename":"/Users/mahdis/Desktop/AP/AP6/examples/main.cpp","identifier":"Save Document","languageId":"cpp","version":1,"lineCount":37},"failed":false}