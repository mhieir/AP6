{"date":"2024-05-25T13:48:41.622Z","courseId":"17","assignment":"AP-Spring03-CA6","trace":{"version":531,"content":"#include \"Global.hpp\"\n\nvector<string> read_csv(const char path[256]) {\n    vector<string> lines;\n    ifstream file_name;\n    string new_line;\n    file_name.open(path);\n    while (getline(file_name, new_line)) {\n        lines.push_back(new_line);\n    }\n    file_name.close();\n    return lines;\n}\n\nvoid signInSplitting(string &result, vector<string> &splitted) {\n    splitted.push_back(result);\n    result = NULL_STRING;\n}\n\nvoid notSignInSplitting(string &result, char character) {\n    result += character;\n}\n\nbool hasQuotion(string inputString) {\n    for (auto &character : inputString){\n        if (character == QUOTION) {\n            return true;\n        }\n    }\n    return false;\n}\nvector<string> splitInQuotionMode(string inputString) {\n    string result = NULL_STRING;\n    vector<string> splitted;\n    for(int i = 0; i < inputString.size(); i++) {\n        if (inputString[i] == SPACE) {\n            if(result != NULL_STRING) signInSplitting(result, splitted);\n        }\n        else if(inputString[i] != QUOTION) {\n            notSignInSplitting(result, inputString[i]);\n        }\n        else {\n            if(result != NULL_STRING) {\n                splitted.clear();\n                return splitted;\n            }\n            for(int j = i; j < inputString.size(); j++, i++) {\n                if(inputString[i] != QUOTION) {\n                    notSignInSplitting(result, inputString[i]);\n                }\n                else {\n                    if(result.empty()) \n                }\n\n            }\n        }\n    }\n    if(result != NULL_STRING) signInSplitting(result, splitted);\n    return splitted;\n}\n\nvector<string> splitByInputSign(string inputString, char sign) {\n    if(hasQuotion(inputString)) {\n        return splitInQuotionMode(inputString);\n    }\n    string result = NULL_STRING;\n    vector<string> splitted;\n    for (auto &character : inputString){\n        if (character == sign) {\n            if(result != NULL_STRING) signInSplitting(result, splitted);\n        }\n        else {\n            notSignInSplitting(result, character);\n        }\n    }\n    if(result != NULL_STRING) signInSplitting(result, splitted);\n    return splitted;\n}\n\nbool isQuestionMark(string input_line) {\n    if(input_line == QUESTION_MARK) {\n        return true;\n    }\n    else {\n        return false;\n    }\n\n}\n\nbool isNumber(string post_id) {\n    for(char c : post_id) {\n        if(!isdigit(c)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nstring makeText(vector<string> input_line, int start, int end) {\n    string result = NULL_STRING;\n    for(int i = start; i < end; i++) {\n        result += input_line[i] + SPACE;\n    }\n    result += input_line[end];\n    return result;\n}\n\nvector<int> findQuotion(vector<string> input_line) {\n    vector<int> quotion;\n    for(int i = 3; i < input_line.size(); i++) {\n        if(input_line[i][0] == QUOTION) {\n            quotion.push_back(i);\n        }\n        if(input_line[i].back() == QUOTION and (int) input_line[i].size() != 1) {\n            quotion.push_back(i);\n        }\n    }\n    return quotion;\n}\n\nbool hasCommon(int a, int b, int c, int d) {\n    if(max(a, c) < min(b, d)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}","filename":"/Users/mahdis/Desktop/AP/AP6/src/Primary.cpp","identifier":"Text Change","lineCount":128,"languageId":"cpp"},"failed":false}