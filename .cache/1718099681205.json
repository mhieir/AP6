{"date":"2024-06-11T09:53:32.084Z","courseId":"17","assignment":"AP-Spring03-CA6-phase3","trace":{"version":487,"content":"#include \"handlers.hpp\"\n#include \"DynamicHTML.hpp\"\n\nLoginHandler::LoginHandler(University *university): university(university) {}\nLogoutHandler::LogoutHandler(University *university): university(university) {}\nPersonalPageHandler::PersonalPageHandler(University *university): university(university) {}\nGetCourseByIdHandler::GetCourseByIdHandler(University *university): university(university) {}\nGetAllCoursesHandler::GetAllCoursesHandler(University *university): university(university) {}\n\n\nResponse* catchError(exception& e) {\n    if(e.what() == PERMISSION_DENIED) {\n        Response* res = Response::redirect(\"/permissionDenied\");\n        return res;\n    }\n    else if(e.what() == BAD_REQUEST) {\n        Response* res = Response::redirect(\"/badRequest\");\n        return res;\n    }\n    else if(e.what() == EMPTY) {\n        Response* res = Response::redirect(\"/empty\");\n        return res;\n    }\n    else {\n        Response* res = Response::redirect(\"/notFound\");\n        return res;\n    }\n}\n\nResponse* LoginHandler::callback(Request* req) {\n    try {\n        string username = req->getBodyParam(\"username\");\n        string password = req->getBodyParam(\"password\");\n        university->runLogin(username, password);\n        PeopleType people_type = university->peopleStatus();\n        if(people_type == _STUDENT) {\n            string body = studentPage(username, university);\n            Response* res = new Response();\n            res->setHeader(\"Content-Type\", \"text/html\");\n            res->setBody(body);\n            return res;\n        }\n        else if(people_type == _PROFESSOR) {\n            Response* res = Response::redirect(\"/professor\");\n            res->setSessionId(\"SID\");\n            return res;\n        }\n        else {\n            Response* res = Response::redirect(\"/ut_account\");\n            res->setSessionId(\"SID\");\n            return res;\n        }\n    }\n    catch (runtime_error& e) {\n        return catchError(e);\n    }\n}\n\nResponse* LogoutHandler::callback(Request* req) {\n    try {\n        university->runLogout();\n        Response* res = Response::redirect(\"/\");\n        res->setSessionId(\"SID\");\n        return res;\n    }\n    catch (runtime_error& e) {\n        return catchError(e);\n    }\n}\n\nResponse* PersonalPageHandler::callback(Request* req) {\n    try {\n        string username = req->getBodyParam(\"username\");\n        university->runPersonalPage(username);\n       // string body = studentPage(username, university);\n        string body;\n        Response* res = new Response();\n        res->setHeader(\"Content-Type\", \"text/html\");\n        res->setBody(body);\n        return res;\n    }\n    catch (runtime_error& e) {\n        return catchError(e);\n    }\n}\n\nResponse* GetCourseByIdHandler::callback(Request* req) {\n    try {\n        string id = req->getBodyParam(\"id\");\n      //  university->runGetCourseById(id);\n        vector<string> output = university->getOutput();\n        string body = showOneCourse(output);\n        Response* res = new Response();\n        res->setHeader(\"Content-Type\", \"text/html\");\n        res->setBody(body);\n        return res;\n    }\n    catch (runtime_error& e) {\n        return catchError(e);\n    }\n}\n\nResponse* GetAllCoursesHandler::callback(Request* req) {\n    try {\n     //   university->runGetCourse();\n        vector<string> output = university->getOutput();\n        string body = showAllCourse(output);\n        Response* res = new Response();\n        res->setHeader(\"Content-Type\", \"text/html\");\n        res->setBody(body);\n        return res;\n    }\n    catch (runtime_error& e) {\n        return catchError(e);\n    }\n}","filename":"/Users/mahdis/Desktop/AP/AP6/code/src/handlers.cpp","identifier":"Text Change","lineCount":116,"languageId":"cpp"},"failed":true}