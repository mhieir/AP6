{"date":"2024-06-09T17:24:20.834Z","courseId":"17","assignment":"AP-Spring03-CA6-phase3","trace":{"version":493,"content":"#include \"Global.hpp\"\n#include \"University.hpp\"\n#include \"server.hpp\"\n#include \"handlers.hpp\"\n\nconst string SHOW_SERVER_PORT = \"Server running on port: \";\n\n\nvoid mapServerPaths(Server* server, University* university) {\n    server->setNotFoundErrPage(\"static/404.html\");\n    server->get(\"/\", new ShowPage(\"static/home.html\"));\n    server->get(\"/home.png\", new ShowImage(\"static/home.png\"));\n    server->get(\"/login\", new ShowPage(\"static/logincss.html\"));\n    server->post(\"/login\", new LoginHandler(university));\n    server->get(\"/login\", new ShowPage(\"static/logincss.html\"));\n    server->get(\"/login\", new ShowPage(\"static/logincss.html\"));\n    server->get(\"/login\", new ShowPage(\"static/logincss.html\"));\n}\n\nint main(int argc, char *argv[]){\n    try {\n        int port = 8080;\n        Server* server = new Server(port);\n        University* university = new University(argv);\n        mapServerPaths(server, university);\n        cout << SHOW_SERVER_PORT << port << endl;\n        server->run();\n    }\n    catch (const std::invalid_argument& e) {\n        std::cerr << e.what() << std::endl;\n    }\n    catch (const Server::Exception& e) {\n        std::cerr << e.getMessage() << std::endl;\n    }\n}","filename":"/Users/mahdis/Desktop/AP/AP6/code/src/main.cpp","identifier":"Text Change","lineCount":35,"languageId":"cpp"},"failed":false}