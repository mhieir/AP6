{"date":"2024-05-31T11:27:58.808Z","courseId":"17","assignment":"AP-Spring03-CA6","trace":{"content":"#ifndef PEOPLE_INCLUDE\n#define PEOPLE_INCLUDE\n\n#include \"Global.hpp\"\n#include \"Entity.hpp\"\n#include \"Major.hpp\"\n#include \"Post.hpp\"\n#include \"Time.hpp\"\n#include \"CourseOffer.hpp\"\n#include \"Cloud.hpp\"\n\nenum PeopleType {\n    _STUDENT,\n    _PROFESSOR,\n    _UTACCOUNT\n};\n\nclass People : public Entity {\npublic:\n    People(string id, string name, Major* major, string password, PeopleType people_type);\n    ~People() {};\n    void addProfile(string new_profile_image);\n    bool validCourseDate(string new_date);\n    string getMajorId() {return major->getId();}\n    string getPassword() {return password;}\n    void addConnection(People* new_connection) {connections.push_back(new_connection);}\n    bool inConnection(string new_id);\n    bool isInPost(int post_id) {return cloud->isInPost(post_id);}\n    void addPost(string title, string message, string image_address) {cloud->addPost(title, message, image_address);}\n    void removePost(int post_id) {cloud->removePost(post_id);}\n    virtual void personalPage(vector<string>& output) = 0;\n    virtual void getPost(vector<string>& output, int post_id) = 0;\n    bool validCourseTime(Time new_time);\n    void addCourse(CourseOffer* course_offer) {course_offers.push_back(course_offer);}\n    void removeCourse(int course_offer_id);\n    PeopleType getPeopleType() {return people_type;}\n    void showOnePost(vector<string>& output, int post_id) {cloud->showOnePost(output, post_id);}\n    virtual int getSemester() {return 0;};\n    bool hasCourseOfferById(int course_id);\n    int numberOfCourses() {return (int) course_offers.size();}\n    void showCourses(vector<string>& output, vector<People*> people);\n    string getProfessorName(vector<People*> people, string prof_id);\n    void showOfferCourses(vector<string>& output);\n    void showPosts(vector<string>& output) {cloud->showPosts(output);}\n    void shareNotification(string command);\n    void addNotification(string notification_line);\n    void printNotification(vector<string>& output) {}\n    bool emptyNotification();\nprotected:\n    Major* major;\n    string password;\n    vector<People*> connections;\n    vector<CourseOffer*> course_offers;\n    Cloud* cloud;\n    PeopleType people_type;\n    vector<string> notifications;\n    string profile_image;\nprivate:\n};\n\n#endif","filename":"/Users/mahdis/Desktop/AP/AP6/include/People.hpp","identifier":"Save Document","languageId":"cpp","version":287,"lineCount":61},"failed":false}