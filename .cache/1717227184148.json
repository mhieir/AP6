{"date":"2024-06-01T07:33:02.643Z","courseId":"17","assignment":"AP-Spring03-CA6","trace":{"content":"#include \"Interface.hpp\"\n#include \"Primary.hpp\"\n\nvoid Interface::makeMajorString(vector<string> major_string) {\n    for(int i = 1; i < major_string.size(); i++) {\n        vector<string> splitted = splitByInputSign(major_string[i], COMMA);\n        university->addMajor(splitted[0], splitted[1]);\n    }\n}\n\nvoid Interface::makeStudentString(vector<string> student_string) {\n    for(int i = 1; i < student_string.size(); i++) {\n        vector<string> splitted = splitByInputSign(student_string[i], COMMA);\n        university->addStudent(splitted[0], splitted[1], university->getMajorById(university->findMajor(splitted[2])), stoi(splitted[3]), splitted[4]);\n    }\n}\n\nvoid Interface::makeCourseString(vector<string> course_string) {\n    for(int i = 1; i < course_string.size(); i++) {\n        vector<string> splitted = splitByInputSign(course_string[i], COMMA);\n        university->addCourse(splitted[0], splitted[1], stoi(splitted[2]), stoi(splitted[3]), splitByInputSign(splitted[4], SEMI_COLON));\n    }\n}\n\nvoid Interface::makeProfessorString(vector<string> professor_string) {\n    for(int i = 1; i < professor_string.size(); i++) {\n        vector<string> splitted = splitByInputSign(professor_string[i], COMMA);\n        university->addProfessor(splitted[0], splitted[1], university->getMajorById(university->findMajor(splitted[2])), splitted[3], splitted[4]);\n    }\n}\n\nInterface::Interface(char *argv[]) {\n    university = new University;\n    makeMajorString(read_csv(argv[1]));\n    makeStudentString(read_csv(argv[2]));\n    makeCourseString(read_csv(argv[3]));\n    makeProfessorString(read_csv(argv[4]));\n}\n\nvoid Interface::showOutput(vector<string> outputs) {\n    for(string output : outputs) {\n        cout << output;\n    }\n}\n\nvector<bool> Interface::showExtraOutput(vector<string> outputs) {\n    vector<bool> result;\n    result.clear();\n    for(string output : outputs) {\n        cout << output;\n        string input_word = NULL_STRING;\n        while(input_word != ACCEPT || input_word != REJECT) {\n            getline(cin, input_word);\n            cout << input_word << endl;\n            if(input_word == ACCEPT) {\n                result.push_back(true);\n            }\n            else if(input_word == REJECT){\n                result.push_back(false);\n            }\n        }\n    }\n    return result;\n}\n\nvoid Interface::run() {\n    university->makeDefaultConnections();\n    string line;\n    while (getline(cin, line)) {\n        university->run(line);\n        showOutput(university->getOutput());\n        university->getExtraOutput(showExtraOutput(university->getExtraOutput()));\n        university->cleanCloseForm();\n        university->cleanOutput();\n    }\n}\n","filename":"/Users/mahdis/Desktop/AP/AP6/src/Interface.cpp","identifier":"Save Document","languageId":"cpp","version":362,"lineCount":77},"failed":false}