{"date":"2024-05-20T07:42:45.203Z","courseId":"17","assignment":"AP-Spring03-CA6","trace":{"content":"#include \"University.hpp\"\n#include \"Primary.hpp\"\n\nvoid University::makeMajorString(vector<string> major_string) {\n    for(int i = 1; i < major_string.size(); i++) {\n        vector<string> splitted = splitByInputSign(major_string[i], COMMA);\n        majors.push_back(new Major(splitted[0], splitted[1]));\n    }\n}\n\nvoid University::makeStudentString(vector<string> student_string) {\n    for(int i = 1; i < student_string.size(); i++) {\n        vector<string> splitted = splitByInputSign(student_string[i], COMMA);\n        people.push_back(new Student(splitted[0], splitted[1], splitted[2], stoi(splitted[3]), splitted[4]));\n    }\n}\n\nvoid University::makeCourseString(vector<string> course_string) {\n    for(int i = 1; i < course_string.size(); i++) {\n        vector<string> splitted = splitByInputSign(course_string[i], COMMA);\n        courses.push_back(new Major(splitted[0], splitted[1]));\n    }\n}\n\nvoid University::makeProfessorString(vector<string> professor_string) {\n    for(int i = 1; i < professor_string.size(); i++) {\n        vector<string> splitted = splitByInputSign(professor_string[i], COMMA);\n        people.push_back(new Major(splitted[0], splitted[1]));\n    }\n}\n\nUniversity::University(char *argv[]) {\n    makeMajorString(read_csv(argv[1]));\n    makeStudentString(read_csv(argv[2]));\n    makeCourseString(read_csv(argv[3]));\n    makeProfessorString(read_csv(argv[4]));\n\n}\n\nvoid University::run() {\n    \n}","filename":"/Users/mahdis/Desktop/AP/AP6/src/University.cpp","identifier":"Save Document","languageId":"cpp","version":664,"lineCount":42},"failed":false}