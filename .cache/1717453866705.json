{"date":"2024-06-03T22:31:04.295Z","courseId":"17","assignment":"AP-Spring03-CA6-phase2","trace":{"version":26,"content":"#ifndef UNIVERSITY_INCLUDE\n#define UNIVERSITY_INCLUDE\n\n#include \"Global.hpp\"\n#include \"Entity.hpp\"\n#include \"Course.hpp\"\n#include \"Major.hpp\"\n#include \"People.hpp\"\n#include \"Student.hpp\"\n#include \"Professor.hpp\"\n#include \"UTAccount.hpp\"\n#include \"CourseOffer.hpp\"\n\nclass University {\npublic:\n    University();\n    ~University() {};\n    void run(string input_string);\n    void addMajor(string id, string name);\n    void addStudent(string id, string name, Major* major, int semester, string password);\n    void addProfessor(string id, string name, Major* major, string string_position, string password);\n    int findMajor(string id);\n    Major* getMajorById(int index);\n    void addCourse(string id, string name, int credit, int prerequisite, vector<string> majors_id);\n    vector<string> getOutput() {return output;}\n    void cleanOutput() {output.clear();}\n    vector<string> getExtraOutput() {return extra_output;}\n    void cleanExtraOutput() {extra_output.clear();}\n    void makeDefaultConnections();\n    void getExtraInput(vector<bool> result) {closeFormResult = result;}\n    void cleanCloseForm();\nprotected:\nprivate:\n    vector<Major*> majors;\n    vector<People*> people;\n    vector<Course*> courses;\n    vector<string> input_line;\n    vector<CourseOffer*> all_course_offers;\n    vector<string> output;\n    vector<string> extra_output;\n    vector<bool> closeFormResult;\n    People* user;\n    int course_offer_id;\n    int current_course_offer;\n\n    void runGetCourseChannel();\n    void makeExtraOutput(vector<string> requested_TAs, int index);\n    void runCloseTAForm();\n    void validInputTAForm();\n    void runPostTAForm();\n    void makeMessageTextCoursePost();\n    void addNotificationCoursePost(int index, string notification_line);\n    void runCoursePost();\n    void runAddProfile();\n    void runNotification();\n    void runGetMyCourse();\n    void runDeleteCourse();\n    bool isStudent();\n    void runPutCourse();\n    void validGetPostInput();\n    void runGetPost();\n    void runGetCourse();\n    bool inCommonTime(string professor_id, string time);\n    bool isPresentByProfessor(string professor_id, string course_id);\n    int findCourseIndexById(string id);\n    int findPeopleIndexById(string id);\n    bool isProfessor(string id);\n    bool checkValidCourse(string id);\n    void shareCourseModeInput();\n    void makeMessageText();\n    void runSharePost();\n    void runRemovePost();\n    void runShareCourse();\n    bool checkLogin();\n    bool checkValidPassword(string id, string password);\n    bool checkValidId(string id);\n    void findPeopleById(string id);\n    void loginModeInput();\n    void runLogin();\n    void runLogout();\n    void runConnect();\n    void runPersonalPage();\n    void handleInput();\n    void handleGetRequest();\n    void handlePostRequest();\n    void handlePutRequest();\n    void handleDeleteRequest();\n    void showAllCourseOffers();\n    void showOneCourseOffers(int index);\n    void catchError(runtime_error& ex);\n    void askProfessorForTA(int index);\n    void runTARequest();\n    void validInputTARequest();\n    void validGetCoursePostInput();\n    void showOneCourseOffersForChannel(int index);\n    void runGetPostCourseChannel();\n};\n\n#endif","filename":"/Users/mahdis/Desktop/AP/AP6/include/University.hpp","identifier":"Text Change","lineCount":99,"languageId":"cpp"},"failed":false}