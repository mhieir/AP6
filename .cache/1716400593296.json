{"date":"2024-05-22T17:56:32.139Z","courseId":"17","assignment":"AP-Spring03-CA6","trace":{"version":934,"content":"#include \"University.hpp\"\n#include \"Primary.hpp\"\n\nUniversity::University() {\n    user = nullptr;\n    people.push_back(new UTAccount(ZERO_STRING, UT_ACCOUNT));\n    course_offer_id = 0;\n}\n\nvoid University::addMajor(string id, string name) {\n    majors.push_back(new Major(id, name));\n}\n\nvoid University::addStudent(string id, string name, string major_id, int semester, string password) {\n    people.push_back(new Student(id, name, major_id, semester, password));\n}\n\nvoid University::addCourse(string id, string name, int credit, int prerequisite, vector<string> majors_id) {\n    courses.push_back(new Course(id, name, credit, prerequisite, majors_id));\n}\n\nvoid University::addProfessor(string id, string name, string major_id, string string_position, string password) {\n    people.push_back(new Professor(id, name, major_id, string_position, password));\n}\n\nbool University::checkValidPassword(string id, string password) {\n    for(int i = 0; i < people.size(); i++) {\n        if(people[i]->getId() == id and people[i]->getPassword() == password) {\n            return true;\n        }\n    }\n    return false;\n}\n\n\nbool University::checkValidPostNumber(string post_id) {\n    if(!isNumber(post_id)) {\n        return false;\n    }\n    return user->isInPost(stoi(post_id));\n}\n\nbool University::checkLogin() {\n    if(user != nullptr) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nbool University::isFloatId(string id) {\n    for(char c : id) {\n        if(c == DOT) {\n            return true;\n        }\n    }\n    return false;\n}\n\nbool University::checkValidId(string id) {\n    for(int i = 0; i < people.size(); i++) {\n        if(people[i]->getId() == id) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvoid University::handlePostRequest() {\n    if(input_line[1] == LITTLE_POST) {\n        runSharePost();\n    }\n    else if(input_line[1] == LOGIN) {\n        runLogin();\n    }\n    else if(input_line[1] == LOGOUT) {\n        runLogout();\n    }\n    else if(input_line[1] == CONNECT) {\n        runConnect();\n    }\n    else if(input_line[1] == COURSE_OFFER) {\n        runShareCourse();\n    }\n    else {\n        throw runtime_error(NOT_FOUND);\n    }\n\n}\n\nvoid University::handleGetRequest() {\n    if(input_line[1] == MY_COURSES) {\n        \n    }\n    else if(input_line[1] == NOTIFICATION) {\n        // runLogin();\n    }\n    else if(input_line[1] == LITTLE_POST) {\n        // runLogin();\n    }\n    else if(input_line[1] == PERSONAL_PAGE) {\n        runPersonalPage();\n    }\n    else if(input_line[1] == COURSES) {\n\n    }\n    else {\n        throw runtime_error(NOT_FOUND);\n    }\n\n}\n\nvoid University::handleDeleteRequest() {\n    if(input_line[1] == LITTLE_POST) {\n        runRemovePost();\n    }\n    else if(input_line[1] == MY_COURSES) {\n        // runLogin();\n    }\n    else {\n        throw runtime_error(NOT_FOUND);\n    }\n}\n\nvoid University::handleInput() {\n    if(input_line[0] == GET) {\n        handleGetRequest();\n    }\n    else if(input_line[0] == POST) {\n        handlePostRequest();\n    }\n    else if(input_line[0] == PUT) {\n        handlePutRequest();\n    }\n    else if(input_line[0] == DELETE) {\n        handleDeleteRequest();\n    }\n    else {\n        throw runtime_error(BAD_REQUEST);\n    }\n}\n\nvoid University::run(string input_string) {\n    input_line = splitByInputSign(input_string, SPACE);\n    try {\n        if(input_line.size() > 0) {\n            handleInput();\n        }\n        else {\n            throw runtime_error(BAD_REQUEST);\n        }\n    } catch (runtime_error &e) {\n        catchError(e);\n    }\n}\n","filename":"/Users/mahdis/Desktop/AP/AP6/src/University.cpp","identifier":"Text Change","lineCount":157,"languageId":"cpp"},"failed":false}